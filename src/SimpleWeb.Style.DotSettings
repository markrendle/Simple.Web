<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Cleanup"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;IMPLICIT_WHEN_INITIALIZER_HAS_TYPE&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_EXPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Cleanup_0020and_0020Reorder/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Cleanup and Reorder"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;IMPLICIT_WHEN_INITIALIZER_HAS_TYPE&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_EXPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;/Profile&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_FIELD/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_AUTO_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BETWEEN_USING_GROUPS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_INSIDE_REGION/@EntryValue">0</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_ANONYMOUS_METHOD_BLOCK/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">NEXT_LINE_SHIFTED_2</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_SIZEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHING_EMPTY_BRACES/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARRAY_INITIALIZER_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">140</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&#xD;
&lt;!--&#xD;
I. Overall&#xD;
&#xD;
I.1 Each pattern can have &lt;Match&gt;....&lt;/Match&gt; element. &#xD;
	For the given type declaration, the pattern with the match, evaluated to 'true' with the largest weight, will be used &#xD;
I.2 Each pattern consists of the sequence of &lt;Entry&gt;...&lt;/Entry&gt; elements. Type member declarations are distributed between entries&#xD;
I.3 If pattern has RemoveAllRegions="true" attribute, then all regions will be cleared prior to reordering. &#xD;
	Otherwise, only auto-generated regions will be cleared&#xD;
I.4 The contents of each entry is sorted by given keys (First key is primary,  next key is secondary, etc). &#xD;
	Then the declarations are grouped and en-regioned by given property&#xD;
&#xD;
II. Available match operands&#xD;
&#xD;
Each operand may have Weight="..." attribute. This weight will be added to the match weight if the operand is evaluated to 'true'.&#xD;
The default weight is 1&#xD;
&#xD;
II.1 Boolean functions:&#xD;
II.1.1 &lt;And&gt;....&lt;/And&gt;&#xD;
II.1.2 &lt;Or&gt;....&lt;/Or&gt;&#xD;
II.1.3 &lt;Not&gt;....&lt;/Not&gt;&#xD;
&#xD;
II.2 Operands&#xD;
II.2.1 &lt;Kind Is="..."/&gt;. Kinds are: class, struct, interface, enum, delegate, type, constructor, destructor, &#xD;
									property, indexer, method, operator, field, constant, event, member&#xD;
II.2.2 &lt;Name Is="..." [IgnoreCase="true/false"] /&gt;. The 'Is' attribute contains regular expression&#xD;
II.2.3 &lt;HasAttribute CLRName="..." [Inherit="true/false"] /&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.4 &lt;Access Is="..."/&gt;. The 'Is' values are: public, protected, internal, protected internal, private&#xD;
II.2.5 &lt;Static/&gt;&#xD;
II.2.6 &lt;Abstract/&gt;&#xD;
II.2.7 &lt;Virtual/&gt;&#xD;
II.2.8 &lt;Override/&gt;&#xD;
II.2.9 &lt;Sealed/&gt;&#xD;
II.2.10 &lt;Readonly/&gt;&#xD;
II.2.11 &lt;ImplementsInterface CLRName="..."/&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.12 &lt;HandlesEvent /&gt;&#xD;
--&gt;&#xD;
&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
	&lt;!--Do not reorder COM interfaces--&gt;&#xD;
	&lt;Pattern&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;And&gt;&#xD;
				&lt;Kind Is="interface"/&gt;&#xD;
				&lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;&#xD;
			&lt;/And&gt;&#xD;
		&lt;/Match&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
	&lt;!--Do not order fields when marked by StructLayout attribute--&gt;&#xD;
	&lt;Pattern RemoveAllRegions="true"&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute" Weight="30"/&gt;&#xD;
		&lt;/Match&gt;&#xD;
&#xD;
		&lt;!--fields DO NOT REORDER! --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="constant"/&gt;&#xD;
					&lt;Kind Is="field"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;!-- constants and statics are not instance members --&gt;&#xD;
				&lt;Kind Order="constant field"/&gt;&#xD;
				&lt;Static/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Constructors. Place static one first--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="constructor"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--properties, indexers--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="property"/&gt;&#xD;
					&lt;Kind Is="indexer"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Events--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="event"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Instance Methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Not&gt;&#xD;
						&lt;Static/&gt;&#xD;
					&lt;/Not&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&#xD;
		&lt;!--Explicit interface implementations--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="20"&gt;&#xD;
					&lt;Kind Is="member"/&gt;&#xD;
					&lt;ImplementsInterface/&gt;&#xD;
					&lt;Access Is="private"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;ImplementsInterface/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Static Methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Static/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Operators--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="operator"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="10"&gt;&#xD;
					&lt;Kind Is="operator"/&gt;&#xD;
					&lt;Name Is="op_Implicit"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="20"&gt;&#xD;
					&lt;Kind Is="operator"/&gt;&#xD;
					&lt;Name Is="op_Explicit"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--all other members--&gt;&#xD;
		&lt;Entry/&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
	&lt;!--Special formatting of NUnit test fixture--&gt;&#xD;
	&lt;Pattern RemoveAllRegions="true"&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;And Weight="100"&gt;&#xD;
				&lt;Kind Is="class"/&gt;&#xD;
				&lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute" Inherit="true"/&gt;&#xD;
			&lt;/And&gt;&#xD;
		&lt;/Match&gt;&#xD;
&#xD;
		&lt;!--Setup/Teardow--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Or&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Group Region="Setup/Teardown"/&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--All other members--&gt;&#xD;
		&lt;Entry/&gt;&#xD;
&#xD;
		&lt;!--Test methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;HasAttribute CLRName="NUnit.Framework.TestAttribute" Inherit="false"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
	&lt;!--Default pattern--&gt;&#xD;
	&lt;Pattern RemoveAllRegions="true"&gt;&#xD;
&#xD;
		&lt;!--public delegate--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Access Is="public"/&gt;&#xD;
					&lt;Kind Is="delegate"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--public enum--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Access Is="public"/&gt;&#xD;
					&lt;Kind Is="enum"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--externs&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="extern"/&gt;&#xD;
					&lt;Static/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
 				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;--&gt;&#xD;
&#xD;
		&lt;!--fields and constants--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="constant"/&gt;&#xD;
					&lt;Kind Is="field"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Kind Order="constant field"/&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Readonly/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Constructors. Place static one first--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="constructor"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--properties, indexers--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="property"/&gt;&#xD;
					&lt;Kind Is="indexer"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Events--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="event"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Instance Methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Not&gt;&#xD;
						&lt;Static/&gt;&#xD;
					&lt;/Not&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&#xD;
		&lt;!--Explicit interface implementations--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="20"&gt;&#xD;
					&lt;Kind Is="member"/&gt;&#xD;
					&lt;ImplementsInterface/&gt;&#xD;
					&lt;Access Is="private"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;ImplementsInterface/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Static Methods--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Static/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Operators--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="operator"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="10"&gt;&#xD;
					&lt;Kind Is="operator"/&gt;&#xD;
					&lt;Name Is="op_Implicit"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="20"&gt;&#xD;
					&lt;Kind Is="operator"/&gt;&#xD;
					&lt;Name Is="op_Explicit"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Access Order="public internal protected private"/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--all other members--&gt;&#xD;
		&lt;Entry/&gt;&#xD;
&#xD;
		&lt;!--nested types--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="type"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Constants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=EnumMember/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Interfaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="I" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Locals/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Other/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Parameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=StaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypeParameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="T" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
    <s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue">True</s:Boolean>
</wpf:ResourceDictionary>