<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Web.Razor</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Internal.Web.Utils.CommonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Cannot_Be_Null_Or_Empty">
            <summary>
              Looks up a localized string similar to Value cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_Between">
            <summary>
              Looks up a localized string similar to Value must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_Enum_Member">
            <summary>
              Looks up a localized string similar to Value must be a value from the &quot;{0}&quot; enumeration..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_GreaterThan">
            <summary>
              Looks up a localized string similar to Value must be greater than {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_GreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_LessThan">
            <summary>
              Looks up a localized string similar to Value must be less than {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_LessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Web.Utils.CommonResources.Argument_Must_Be_Null_Or_Non_Empty">
            <summary>
              Looks up a localized string similar to Value cannot be an empty string. It must either be null or a non-empty string..
            </summary>
        </member>
        <member name="T:System.Web.Razor.DocumentParseCompleteEventArgs">
            <summary>
            Arguments for the DocumentParseComplete event in RazorEditorParser
            </summary>
        </member>
        <member name="P:System.Web.Razor.DocumentParseCompleteEventArgs.TreeStructureChanged">
            <summary>
            Indicates if the tree structure has actually changed since the previous reparse.
            </summary>
        </member>
        <member name="P:System.Web.Razor.DocumentParseCompleteEventArgs.GeneratorResults">
            <summary>
            The results of the code generation and parsing
            </summary>
        </member>
        <member name="P:System.Web.Razor.DocumentParseCompleteEventArgs.SourceChange">
            <summary>
            The TextChange which triggered the reparse
            </summary>
        </member>
        <member name="M:System.Web.Razor.Editor.SpanEditHandler.IsEndInsertion(System.Web.Razor.Parser.SyntaxTree.Span,System.Web.Razor.Text.TextChange)">
            <summary>
            Returns true if the specified change is an insertion of text at the end of this span.
            </summary>
        </member>
        <member name="M:System.Web.Razor.Editor.SpanEditHandler.IsEndDeletion(System.Web.Razor.Parser.SyntaxTree.Span,System.Web.Razor.Text.TextChange)">
            <summary>
            Returns true if the specified change is an insertion of text at the end of this span.
            </summary>
        </member>
        <member name="M:System.Web.Razor.Editor.SpanEditHandler.IsEndReplace(System.Web.Razor.Parser.SyntaxTree.Span,System.Web.Razor.Text.TextChange)">
            <summary>
            Returns true if the specified change is a replacement of text at the end of this span.
            </summary>
        </member>
        <member name="M:System.Web.Razor.Editor.SpanEditHandler.GetOldText(System.Web.Razor.Parser.SyntaxTree.Span,System.Web.Razor.Text.TextChange)">
            <summary>
            Returns the old text referenced by the change.
            </summary>
            <remarks>
            If the content has already been updated by applying the change, this data will be _invalid_
            </remarks>
        </member>
        <member name="P:System.Web.Razor.Editor.SpanEditHandler.EditorHints">
            <summary>
            Provides a set of hints to editors which may be manipulating the document in which this span is located.
            </summary>
        </member>
        <member name="E:System.Web.Razor.Editor.BackgroundParser.ResultsReady">
            <summary>
            Fired on the main thread.
            </summary>
        </member>
        <member name="F:System.Web.Razor.Generator.ExpressionRenderingMode.WriteToOutput">
            <summary>
            Indicates that expressions should be written to the output stream
            </summary>
            <example>
            If @foo is rendered with WriteToOutput, the code generator would output the following code:
            
            Write(foo);
            </example>
        </member>
        <member name="F:System.Web.Razor.Generator.ExpressionRenderingMode.InjectCode">
            <summary>
            Indicates that expressions should simply be placed as-is in the code, and the context in which
            the code exists will be used to render it
            </summary>
            <example>
            If @foo is rendered with InjectCode, the code generator would output the following code:
            
            foo
            </example>
        </member>
        <member name="T:System.Web.Razor.Editor.EditorHints">
            <summary>
            Used within <see cref="F:SpanEditHandler.EditorHints"/>.
            </summary>
        </member>
        <member name="F:System.Web.Razor.Editor.EditorHints.None">
            <summary>
            The default (Markup or Code) editor behavior for Statement completion should be used.
            Editors can always use the default behavior, even if the span is labeled with a different CompletionType.
            </summary>
        </member>
        <member name="F:System.Web.Razor.Editor.EditorHints.VirtualPath">
            <summary>
            Indicates that Virtual Path completion should be used for this span if the editor supports it.
            Editors need not support this mode of completion, and will use the default (<see cref="F:EditorHints.None"/>) behavior
            if they do not support it.
            </summary>
        </member>
        <member name="F:System.Web.Razor.Editor.EditorHints.LayoutPage">
            <summary>
            Indicates that this span's content contains the path to the layout page for this document.
            </summary>
        </member>
        <member name="M:System.Web.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Put the specified symbols back in the input stream. The provided list MUST be in the ORDER THE SYMBOLS WERE READ. The
            list WILL be reversed and the Putback(TSymbol) will be called on each item.
            </summary>
            <remarks>
            If a document contains symbols: a, b, c, d, e, f
            and AcceptWhile or AcceptUntil is used to collect until d
            the list returned by AcceptWhile/Until will contain: a, b, c IN THAT ORDER
            that is the correct format for providing to this method. The caller of this method would,
            in that case, want to put c, b and a back into the stream, so "a, b, c" is the CORRECT order
            </remarks>
        </member>
        <member name="M:System.Web.Razor.Parser.HtmlMarkupParser.ScanTagInDocumentContext">
            <summary>
            Reads the content of a tag (if present) in the MarkupDocument (or MarkupSection) context,
            where we don't care about maintaining a stack of tags.
            </summary>
            <returns>A boolean indicating if we scanned at least one tag.</returns>
        </member>
        <member name="T:System.Web.Razor.PartialParseResult">
            <summary>
            The result of attempting an incremental parse
            </summary>
            <remarks>
            Either the Accepted or Rejected flag is ALWAYS set.  
            Additionally, Provisional may be set with Accepted and SpanContextChanged may be set with Rejected.
            Provisional may NOT be set with Rejected and SpanContextChanged may NOT be set with Accepted.
            </remarks>
        </member>
        <member name="F:System.Web.Razor.PartialParseResult.Rejected">
            <summary>
            Indicates that the edit could not be accepted and that a reparse is underway.
            </summary>
        </member>
        <member name="F:System.Web.Razor.PartialParseResult.Accepted">
            <summary>
            Indicates that the edit was accepted and has been added to the parse tree
            </summary>
        </member>
        <member name="F:System.Web.Razor.PartialParseResult.Provisional">
            <summary>
            Indicates that the edit was accepted, but that a reparse should be forced when idle time is available
            since the edit may be misclassified
            </summary>
            <remarks>
            This generally occurs when a "." is typed in an Implicit Expression, since editors require that this
            be assigned to Code in order to properly support features like IntelliSense.  However, if no further edits
            occur following the ".", it should be treated as Markup.
            </remarks>
        </member>
        <member name="F:System.Web.Razor.PartialParseResult.SpanContextChanged">
            <summary>
            Indicates that the edit caused a change in the span's context and that if any statement completions were active prior to starting this
            partial parse, they should be reinitialized.
            </summary>
        </member>
        <member name="F:System.Web.Razor.PartialParseResult.AutoCompleteBlock">
            <summary>
            Indicates that the edit requires an auto completion to occur
            </summary>
        </member>
        <member name="T:System.Web.Razor.RazorDirectiveAttribute">
            <summary>
            Specifies a Razor directive that is rendered as an attribute on the generated class. 
            </summary>
        </member>
        <member name="T:System.Web.Razor.RazorEditorParser">
            <summary>
            Parser used by editors to avoid reparsing the entire document on each text change
            </summary>
            <remarks>
            This parser is designed to allow editors to avoid having to worry about incremental parsing.
            The CheckForStructureChanges method can be called with every change made by a user in an editor and
            the parser will provide a result indicating if it was able to incrementally reparse the document.
            
            The general workflow for editors with this parser is:
            0. User edits document
            1. Editor builds TextChange structure describing the edit and providing a reference to the _updated_ text buffer
            2. Editor calls CheckForStructureChanges passing in that change.
            3. Parser determines if the change can be simply applied to an existing parse tree node
              a.  If it can, the Parser updates its parse tree and returns PartialParseResult.Accepted
              b.  If it can not, the Parser starts a background parse task and return PartialParseResult.Rejected
            NOTE: Additional flags can be applied to the PartialParseResult, see that enum for more details.  However,
                  the Accepted or Rejected flags will ALWAYS be present
            
            A change can only be incrementally parsed if a single, unique, Span (see System.Web.Razor.Parser.SyntaxTree) in the syntax tree can
            be identified as owning the entire change.  For example, if a change overlaps with multiple spans, the change cannot be
            parsed incrementally and a full reparse is necessary.  A Span "owns" a change if the change occurs either a) entirely
            within it's boundaries or b) it is a pure insertion (see TextChange) at the end of a Span whose CanGrow flag (see Span) is
            true.
            
            Even if a single unique Span owner can be identified, it's possible the edit will cause the Span to split or merge with other
            Spans, in which case, a full reparse is necessary to identify the extent of the changes to the tree.
            
            When the RazorEditorParser returns Accepted, it updates CurrentParseTree immediately.  However, the editor is expected to
            update it's own data structures independently.  It can use CurrentParseTree to do this, as soon as the editor returns from
            CheckForStructureChanges, but it should (ideally) have logic for doing so without needing the new tree.
            
            When Rejected is returned by CheckForStructureChanges, a background parse task has _already_ been started.  When that task
            finishes, the DocumentStructureChanged event will be fired containing the new generated code, parse tree and a reference to
            the original TextChange that caused the reparse, to allow the editor to resolve the new tree against any changes made since 
            calling CheckForStructureChanges.
            
            If a call to CheckForStructureChanges occurs while a reparse is already in-progress, the reparse is cancelled IMMEDIATELY
            and Rejected is returned without attempting to reparse.  This means that if a conusmer calls CheckForStructureChanges, which
            returns Rejected, then calls it again before DocumentParseComplete is fired, it will only recieve one DocumentParseComplete
            event, for the second change.
            </remarks>
        </member>
        <member name="M:System.Web.Razor.RazorEditorParser.#ctor(System.Web.Razor.RazorEngineHost,System.String)">
            <summary>
            Constructs the editor parser.  One instance should be used per active editor.  This
            instance _can_ be shared among reparses, but should _never_ be shared between documents.
            </summary>
            <param name="host">The <see cref="T:System.Web.Razor.RazorEngineHost"/> which defines the environment in which the generated code will live.  <see cref="F:RazorEngineHost.DesignTimeMode"/> should be set if design-time code mappings are desired</param>
            <param name="sourceFileName">The physical path to use in line pragmas</param>
        </member>
        <member name="M:System.Web.Razor.RazorEditorParser.CheckForStructureChanges(System.Web.Razor.Text.TextChange)">
            <summary>
            Determines if a change will cause a structural change to the document and if not, applies it to the existing tree.
            If a structural change would occur, automatically starts a reparse
            </summary>
            <remarks>
            NOTE: The initial incremental parsing check and actual incremental parsing (if possible) occurs
            on the callers thread.  However, if a full reparse is needed, this occurs on a background thread.
            </remarks>
            <param name="change">The change to apply to the parse tree</param>
            <returns>A PartialParseResult value indicating the result of the incremental parse</returns>
        </member>
        <member name="M:System.Web.Razor.RazorEditorParser.Dispose">
            <summary>
            Disposes of this parser.  Should be called when the editor window is closed and the document is unloaded.
            </summary>
        </member>
        <member name="E:System.Web.Razor.RazorEditorParser.DocumentParseComplete">
            <summary>
            Event fired when a full reparse of the document completes
            </summary>
        </member>
        <member name="T:System.Web.Razor.GeneratorResults">
            <summary>
            Represents results from code generation (and parsing, since that is a pre-requisite of code generation)
            </summary>
            <remarks>
            Since this inherits from ParserResults, it has all the data from ParserResults, and simply adds code generation data
            </remarks>
        </member>
        <member name="T:System.Web.Razor.ParserResults">
            <summary>
            Represents the results of parsing a Razor document
            </summary>
        </member>
        <member name="P:System.Web.Razor.ParserResults.Success">
            <summary>
            Indicates if parsing was successful (no errors)
            </summary>
        </member>
        <member name="P:System.Web.Razor.ParserResults.Document">
            <summary>
            The root node in the document's syntax tree
            </summary>
        </member>
        <member name="P:System.Web.Razor.ParserResults.ParserErrors">
            <summary>
            The list of errors which occurred during parsing.
            </summary>
        </member>
        <member name="P:System.Web.Razor.GeneratorResults.GeneratedCode">
            <summary>
            The generated code
            </summary>
        </member>
        <member name="P:System.Web.Razor.GeneratorResults.DesignTimeLineMappings">
            <summary>
            If design-time mode was used in the Code Generator, this will contain the dictionary
            of design-time generated code mappings
            </summary>
        </member>
        <member name="T:System.Web.Razor.RazorEngineHost">
            <summary>
            Defines the environment in which a Razor template will live
            </summary>
            <remarks>
            The host defines the following things:
            * What method names will be used for rendering markup, expressions etc.  For example "Write", "WriteLiteral"
            * The namespace imports to be added to every page generated via this host
            * The default Base Class to inherit the generated class from
            * The default Class Name and Namespace for the generated class (can be overridden by parameters in RazorTemplateEngine.GeneratedCode)
            * The language of the code in a Razor page
            * The markup, code parsers and code generators to use (the system will select defaults, but a Host gets a change to augment them)
                ** See DecorateNNN methods
            * Additional code to add to the generated code (see PostProcessGeneratedCode)
            </remarks>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.#ctor(System.Web.Razor.RazorCodeLanguage)">
            <summary>
            Creates a host which uses the specified code language and the HTML markup language
            </summary>
            <param name="codeLanguage">The code language to use</param>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.CreateMarkupParser">
            <summary>
            Constructs the markup parser.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
            <summary>
            Gets an instance of the code parser and is provided an opportunity to decorate or replace it
            </summary>
            <param name="incomingCodeParser">The code parser</param>
            <returns>Either the same code parser, after modifications, or a different code parser</returns>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.DecorateMarkupParser(System.Web.Razor.Parser.ParserBase)">
            <summary>
            Gets an instance of the markup parser and is provided an opportunity to decorate or replace it
            </summary>
            <param name="incomingMarkupParser">The markup parser</param>
            <returns>Either the same markup parser, after modifications, or a different markup parser</returns>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
            <summary>
            Gets an instance of the code generator and is provided an opportunity to decorate or replace it
            </summary>
            <param name="incomingCodeGenerator">The code generator</param>
            <returns>Either the same code generator, after modifications, or a different code generator</returns>
        </member>
        <member name="M:System.Web.Razor.RazorEngineHost.PostProcessGeneratedCode(System.Web.Razor.Generator.CodeGeneratorContext)">
            <summary>
            Gets the important CodeDOM nodes generated by the code generator and has a chance to add to them.
            </summary>
            <remarks>
            All the other parameter values can be located by traversing tree in the codeCompileUnit node, they
            are simply provided for convenience
            </remarks>
            <param name="context">The current <see cref="T:System.Web.Razor.Generator.CodeGeneratorContext"/>.</param>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.GeneratedClassContext">
            <summary>
            Details about the methods and types that should be used to generate code for Razor constructs
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.NamespaceImports">
            <summary>
            A list of namespaces to import in the generated file
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.DefaultBaseClass">
            <summary>
            The base-class of the generated class
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.DesignTimeMode">
            <summary>
            Indiciates if the parser and code generator should run in design-time mode
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.DefaultClassName">
            <summary>
            The name of the generated class
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.DefaultNamespace">
            <summary>
            The namespace which will contain the generated class
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.StaticHelpers">
            <summary>
            Boolean indicating if helper methods should be instance methods or static methods
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.CodeLanguage">
            <summary>
            The language of the code within the Razor template.
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.EnableInstrumentation">
            <summary>
            Boolean indicating if instrumentation code should be injected into the output page
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorEngineHost.InstrumentedSourceFilePath">
            <summary>
            Gets or sets the path to use for this document when generating Instrumentation calls
            </summary>
        </member>
        <member name="T:System.Web.Razor.RazorTemplateEngine">
            <summary>
            Entry-point to the Razor Template Engine
            </summary>
        </member>
        <member name="M:System.Web.Razor.RazorTemplateEngine.#ctor(System.Web.Razor.RazorEngineHost)">
            <summary>
            Constructs a new RazorTemplateEngine with the specified host
            </summary>
            <param name="host">The host which defines the environment in which the generated template code will live</param>
        </member>
        <member name="M:System.Web.Razor.RazorTemplateEngine.ParseTemplate(System.Web.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Parses the template specified by the TextBuffer and returns it's result
            </summary>
            <remarks>
            IMPORTANT: This does NOT need to be called before GeneratedCode! GenerateCode will automatically
            parse the document first.
            
            The cancel token provided can be used to cancel the parse.  However, please note
            that the parse occurs _synchronously_, on the callers thread.  This parameter is 
            provided so that if the caller is in a background thread with a CancellationToken, 
            it can pass it along to the parser.
            </remarks>
            <param name="input">The input text to parse</param>
            <param name="cancelToken">A token used to cancel the parser</param>
            <returns>The resulting parse tree</returns>
        </member>
        <member name="M:System.Web.Razor.RazorTemplateEngine.GenerateCode(System.Web.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Parses the template specified by the TextBuffer, generates code for it, and returns the constructed CodeDOM tree
            </summary>
            <remarks>
            The cancel token provided can be used to cancel the parse.  However, please note
            that the parse occurs _synchronously_, on the callers thread.  This parameter is 
            provided so that if the caller is in a background thread with a CancellationToken, 
            it can pass it along to the parser.
            
            The className, rootNamespace and sourceFileName parameters are optional and override the default
            specified by the Host.  For example, the WebPageRazorHost in System.Web.WebPages.Razor configures the
            Class Name, Root Namespace and Source File Name based on the virtual path of the page being compiled.
            However, the built-in RazorEngineHost class uses constant defaults, so the caller will likely want to 
            change them using these parameters
            </remarks>
            <param name="input">The input text to parse</param>
            <param name="cancelToken">A token used to cancel the parser</param>
            <param name="className">The name of the generated class, overriding whatever is specified in the Host.  The default value (defined in the Host) can be used by providing null for this argument</param>
            <param name="rootNamespace">The namespace in which the generated class will reside, overriding whatever is specified in the Host.  The default value (defined in the Host) can be used by providing null for this argument</param>
            <param name="sourceFileName">The file name to use in line pragmas, usually the original Razor file, overriding whatever is specified in the Host.  The default value (defined in the Host) can be used by providing null for this argument</param>
            <returns>The resulting parse tree AND generated Code DOM tree</returns>
        </member>
        <member name="P:System.Web.Razor.RazorTemplateEngine.Host">
            <summary>
            The RazorEngineHost which defines the environment in which the generated template code will live
            </summary>
        </member>
        <member name="M:System.Web.Razor.StateMachine`1.Stop">
            <summary>
            Returns a result indicating that the machine should stop executing and return null output.
            </summary>
        </member>
        <member name="M:System.Web.Razor.StateMachine`1.Transition(System.Web.Razor.StateMachine{`0}.State)">
            <summary>
            Returns a result indicating that this state has no output and the machine should immediately invoke the specified state
            </summary>
            <remarks>
            By returning no output, the state machine will invoke the next state immediately, before returning
            controller to the caller of <see cref="M:System.Web.Razor.StateMachine`1.Turn"/>
            </remarks>
        </member>
        <member name="M:System.Web.Razor.StateMachine`1.Transition(`0,System.Web.Razor.StateMachine{`0}.State)">
            <summary>
            Returns a result containing the specified output and indicating that the next call to
            <see cref="M:System.Web.Razor.StateMachine`1.Turn"/> should invoke the provided state.
            </summary>
        </member>
        <member name="M:System.Web.Razor.StateMachine`1.Stay">
            <summary>
            Returns a result indicating that this state has no output and the machine should remain in this state
            </summary>
            <remarks>
            By returning no output, the state machine will re-invoke the current state again before returning
            controller to the caller of <see cref="M:System.Web.Razor.StateMachine`1.Turn"/>
            </remarks>
        </member>
        <member name="M:System.Web.Razor.StateMachine`1.Stay(`0)">
            <summary>
            Returns a result containing the specified output and indicating that the next call to
            <see cref="M:System.Web.Razor.StateMachine`1.Turn"/> should re-invoke the current state.
            </summary>
        </member>
        <member name="T:System.Web.Razor.Text.TextBufferReader.BacktrackContext">
            <summary>
            Need a class for reference equality to support cancelling backtrack.
            </summary>
        </member>
        <member name="T:System.Web.Razor.VBRazorCodeLanguage">
            <summary>
            Defines the Visual Basic Code Language for Razor
            </summary>
        </member>
        <member name="T:System.Web.Razor.RazorCodeLanguage">
            <summary>
            Represents a code language in Razor.
            </summary>
        </member>
        <member name="M:System.Web.Razor.RazorCodeLanguage.GetLanguageByExtension(System.String)">
            <summary>
            Gets the RazorCodeLanguage registered for the specified file extension
            </summary>
            <param name="fileExtension">The extension, with or without a "."</param>
            <returns>The language registered for that extension</returns>
        </member>
        <member name="M:System.Web.Razor.RazorCodeLanguage.CreateCodeParser">
            <summary>
            Constructs the code parser.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        </member>
        <member name="M:System.Web.Razor.RazorCodeLanguage.CreateCodeGenerator(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
            <summary>
            Constructs the code generator.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorCodeLanguage.Languages">
            <summary>
            Gets the list of registered languages mapped to file extensions (without a ".")
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorCodeLanguage.LanguageName">
            <summary>
            The name of the language (for use in System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage)
            </summary>
        </member>
        <member name="P:System.Web.Razor.RazorCodeLanguage.CodeDomProviderType">
            <summary>
            The type of the CodeDOM provider for this language
            </summary>
        </member>
        <member name="M:System.Web.Razor.VBRazorCodeLanguage.CreateCodeParser">
            <summary>
            Constructs a new instance of the code parser for this language
            </summary>
        </member>
        <member name="M:System.Web.Razor.VBRazorCodeLanguage.CreateCodeGenerator(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
            <summary>
            Constructs a new instance of the code generator for this language with the specified settings
            </summary>
        </member>
        <member name="P:System.Web.Razor.VBRazorCodeLanguage.LanguageName">
            <summary>
            Returns the name of the language: "vb"
            </summary>
        </member>
        <member name="P:System.Web.Razor.VBRazorCodeLanguage.CodeDomProviderType">
            <summary>
            Returns the type of the CodeDOM provider for this language
            </summary>
        </member>
        <member name="M:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Accept(System.Web.Razor.Parser.ParserVisitor)">
            <summary>
            Accepts a parser visitor, calling the appropriate visit method and passing in this instance
            </summary>
            <param name="visitor">The visitor to accept</param>
        </member>
        <member name="M:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.EquivalentTo(System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode)">
            <summary>
            Determines if the specified node is equivalent to this node
            </summary>
            <param name="node">The node to compare this node with</param>
            <returns>
            true if the provided node has all the same content and metadata, though the specific quantity and type of symbols may be different.
            </returns>
        </member>
        <member name="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.IsBlock">
            <summary>
            Returns true if this element is a block (to avoid casting)
            </summary>
        </member>
        <member name="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Length">
            <summary>
            The length of all the content contained in this node
            </summary>
        </member>
        <member name="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Start">
            <summary>
            The start point of this node
            </summary>
        </member>
        <member name="M:System.Web.Razor.Parser.ParserContext.StartBlock(System.Web.Razor.Parser.SyntaxTree.BlockType)">
            <summary>
            Starts a block of the specified type
            </summary>
            <param name="blockType">The type of the block to start</param>
        </member>
        <member name="M:System.Web.Razor.Parser.ParserContext.StartBlock">
            <summary>
            Starts a block
            </summary>
        </member>
        <member name="M:System.Web.Razor.Parser.ParserContext.EndBlock">
            <summary>
            Ends the current block
            </summary>
        </member>
        <member name="M:System.Web.Razor.Parser.ParserContext.IsWithin(System.Web.Razor.Parser.SyntaxTree.BlockType)">
            <summary>
            Gets a boolean indicating if any of the ancestors of the current block is of the specified type
            </summary>
        </member>
        <member name="T:System.Web.Razor.CSharpRazorCodeLanguage">
            <summary>
            Defines the C# Code Language for Razor
            </summary>
        </member>
        <member name="M:System.Web.Razor.CSharpRazorCodeLanguage.CreateCodeParser">
            <summary>
            Constructs a new instance of the code parser for this language
            </summary>
        </member>
        <member name="M:System.Web.Razor.CSharpRazorCodeLanguage.CreateCodeGenerator(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
            <summary>
            Constructs a new instance of the code generator for this language with the specified settings
            </summary>
        </member>
        <member name="P:System.Web.Razor.CSharpRazorCodeLanguage.LanguageName">
            <summary>
            Returns the name of the language: "csharp"
            </summary>
        </member>
        <member name="P:System.Web.Razor.CSharpRazorCodeLanguage.CodeDomProviderType">
            <summary>
            Returns the type of the CodeDOM provider for this language
            </summary>
        </member>
        <member name="T:System.Web.Razor.Resources.RazorResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ActiveParser_Must_Be_Code_Or_Markup_Parser">
            <summary>
              Looks up a localized string similar to The active parser must the same as either the markup or code parser..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Block_Type_Not_Specified">
            <summary>
              Looks up a localized string similar to Block cannot be built because a Type has not been specified in the BlockBuilder.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.BlockName_Code">
            <summary>
              Looks up a localized string similar to code.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.BlockName_ExplicitExpression">
            <summary>
              Looks up a localized string similar to explicit expression.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CancelBacktrack_Must_Be_Called_Within_Lookahead">
            <summary>
              Looks up a localized string similar to The &quot;CancelBacktrack&quot; method can be called only while in a look-ahead process started with the &quot;BeginLookahead&quot; method..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CreateCodeWriter_NoCodeWriter">
            <summary>
              Looks up a localized string similar to Cannot call CreateCodeWriter, a CodeWriter was not provided to the Create method.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_CharacterLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;character literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_Comment">
            <summary>
              Looks up a localized string similar to &lt;&lt;comment&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_Identifier">
            <summary>
              Looks up a localized string similar to &lt;&lt;identifier&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_IntegerLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;integer literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_Keyword">
            <summary>
              Looks up a localized string similar to &lt;&lt;keyword&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_Newline">
            <summary>
              Looks up a localized string similar to &lt;&lt;newline sequence&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_RealLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;real literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_StringLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;string literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.CSharpSymbol_Whitespace">
            <summary>
              Looks up a localized string similar to &lt;&lt;white space&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.EndBlock_Called_Without_Matching_StartBlock">
            <summary>
              Looks up a localized string similar to &quot;EndBlock&quot; was called without a matching call to &quot;StartBlock&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ErrorComponent_Character">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; character.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ErrorComponent_EndOfFile">
            <summary>
              Looks up a localized string similar to end of file.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ErrorComponent_Newline">
            <summary>
              Looks up a localized string similar to line break.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ErrorComponent_Whitespace">
            <summary>
              Looks up a localized string similar to space or line break.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.HtmlSymbol_NewLine">
            <summary>
              Looks up a localized string similar to &lt;&lt;newline sequence&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.HtmlSymbol_RazorComment">
            <summary>
              Looks up a localized string similar to &lt;&lt;razor comment&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.HtmlSymbol_Text">
            <summary>
              Looks up a localized string similar to &lt;&lt;text&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.HtmlSymbol_WhiteSpace">
            <summary>
              Looks up a localized string similar to &lt;&lt;white space&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Language_Does_Not_Support_RazorComment">
            <summary>
              Looks up a localized string similar to Cannot use built-in RazorComment handler, language characteristics does not define the CommentStart, CommentStar and CommentBody known symbol types or parser does not override TokenizerBackedParser.OutputSpanBeforeRazorComment.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_AtInCode_Must_Be_Followed_By_Colon_Paren_Or_Identifier_Start">
             <summary>
               Looks up a localized string similar to The &quot;@&quot; character must be followed by a &quot;:&quot;, &quot;(&quot;, or a C# identifier.  If you intended to switch to markup, use an HTML start tag, for example:
            
            @if(isLoggedIn) {
                &lt;p&gt;Hello, @user!&lt;/p&gt;
            }.
             </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_BlockComment_Not_Terminated">
            <summary>
              Looks up a localized string similar to End of file was reached before the end of the block comment.  All comments started with &quot;/*&quot; sequence must be terminated with a matching &quot;*/&quot; sequence..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_BlockNotTerminated">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; block was not terminated.  All &quot;{0}&quot; statements must be terminated with a matching &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Expected_CloseBracket_Before_EOF">
            <summary>
              Looks up a localized string similar to An opening &quot;{0}&quot; is missing the corresponding closing &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Expected_EndOfBlock_Before_EOF">
            <summary>
              Looks up a localized string similar to The {0} block is missing a closing &quot;{1}&quot; character.  Make sure you have a matching &quot;{1}&quot; character for all the &quot;{2}&quot; characters within this block, and that none of the &quot;{1}&quot; characters are being interpreted as markup..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Expected_X">
            <summary>
              Looks up a localized string similar to Expected &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Helpers_Cannot_Be_Nested">
            <summary>
              Looks up a localized string similar to Helper blocks cannot be nested within each other..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_InheritsKeyword_Must_Be_Followed_By_TypeName">
            <summary>
              Looks up a localized string similar to The &apos;inherits&apos; keyword must be followed by a type name on the same line..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_InlineMarkup_Blocks_Cannot_Be_Nested">
            <summary>
              Looks up a localized string similar to Inline markup blocks (@&lt;p&gt;Content&lt;/p&gt;) cannot be nested.  Only one level of inline markup is allowed..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_InvalidOptionValue">
            <summary>
              Looks up a localized string similar to &quot;{1}&quot; is not a valid value for the &quot;{0}&quot; option. The &quot;Option {0}&quot; statement must be followed by either &quot;On&quot; or &quot;Off&quot;. .
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_MarkupBlock_Must_Start_With_Tag">
            <summary>
              Looks up a localized string similar to Markup in a code block must start with a tag and all start tags must be matched with end tags.  Do not use unclosed tags like &quot;&lt;br&gt;&quot;.  Instead use self-closing tags like &quot;&lt;br/&gt;&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_MissingCharAfterHelperName">
            <summary>
              Looks up a localized string similar to Expected a &quot;{0}&quot; after the helper name..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_MissingCharAfterHelperParameters">
            <summary>
              Looks up a localized string similar to Expected a &quot;{0}&quot; after the helper parameters..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_MissingEndTag">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; element was not closed.  All elements must be either self-closing or have a matching end tag..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_MissingOpenBraceAfterSection">
             <summary>
               Looks up a localized string similar to Sections cannot be empty.  The &quot;@section&quot; keyword must be followed by a block of markup surrounded by &quot;{}&quot;.  For example:
            
            @section Sidebar {
               &lt;!-- Markup and text goes here --&gt;
            }.
             </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_NamespaceImportAndTypeAlias_Cannot_Exist_Within_CodeBlock">
             <summary>
               Looks up a localized string similar to Namespace imports and type aliases cannot be placed within code blocks.  They must immediately follow an &quot;@&quot; character in markup.  It is recommended that you put them at the top of the page, as in the following example:
            
            @using System.Drawing;
            @{
                // OK here to use types from System.Drawing in the page.
            }.
             </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_NamespaceOrTypeAliasExpected">
            <summary>
              Looks up a localized string similar to The &quot;Imports&quot; keyword must be followed by a namespace or a type alias on the same line..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_OuterTagMissingName">
            <summary>
              Looks up a localized string similar to Outer tag is missing a name. The first character of a markup block must be an HTML tag with a valid name..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_RazorComment_Not_Terminated">
            <summary>
              Looks up a localized string similar to End of file was reached before the end of the block comment.  All comments that start with the &quot;@*&quot; sequence must be terminated with a matching &quot;*@&quot; sequence..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_ReservedWord">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a reserved word and cannot be used in implicit expressions.  An explicit expression (&quot;@()&quot;) must be used..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Sections_Cannot_Be_Nested">
            <summary>
              Looks up a localized string similar to Section blocks (&quot;{0}&quot;) cannot be nested.  Only one level of section blocks are allowed..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_SingleLine_ControlFlowStatements_Not_Allowed">
             <summary>
               Looks up a localized string similar to Expected a &quot;{0}&quot; but found a &quot;{1}&quot;.  Block statements must be enclosed in &quot;{{&quot; and &quot;}}&quot;.  You cannot use single-statement control-flow statements in CSHTML pages. For example, the following is not allowed:
            
            @if(isLoggedIn)
                &lt;p&gt;Hello, @user&lt;/p&gt;
            
            Instead, wrap the contents of the block in &quot;{{}}&quot;:
            
            @if(isLoggedIn) {{
                &lt;p&gt;Hello, @user&lt;/p&gt;
            }}.
             </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_TextTagCannotContainAttributes">
            <summary>
              Looks up a localized string similar to &quot;&lt;text&gt;&quot; and &quot;&lt;/text&gt;&quot; tags cannot contain attributes..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected">
            <summary>
              Looks up a localized string similar to Unexpected &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Character_At_Helper_Name_Start">
            <summary>
              Looks up a localized string similar to Unexpected {0} after helper keyword.  All helpers must have a name which starts with an &quot;_&quot; or alphabetic character. The remaining characters must be either &quot;_&quot; or alphanumeric..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Character_At_Section_Name_Start">
            <summary>
              Looks up a localized string similar to Unexpected {0} after section keyword.  Section names must start with an &quot;_&quot; or alphabetic character, and the remaining characters must be either &quot;_&quot; or alphanumeric..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Character_At_Start_Of_CodeBlock_CS">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is not valid at the start of a code block.  Only identifiers, keywords, comments, &quot;(&quot; and &quot;{{&quot; are valid..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Character_At_Start_Of_CodeBlock_VB">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is not valid at the start of a code block.  Only identifiers, keywords, comments, and &quot;(&quot; are valid..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_EndOfFile_At_Start_Of_CodeBlock">
            <summary>
              Looks up a localized string similar to End-of-file was found after the &quot;@&quot; character.  &quot;@&quot; must be followed by a valid code block.  If you want to output an &quot;@&quot;, escape it using the sequence: &quot;@@&quot;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Keyword_After_At">
            <summary>
              Looks up a localized string similar to Unexpected &quot;{0}&quot; keyword after &quot;@&quot; character.  Once inside code, you do not need to prefix constructs like &quot;{0}&quot; with &quot;@&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_Nested_CodeBlock">
            <summary>
              Looks up a localized string similar to Unexpected &quot;{&quot; after &quot;@&quot; character. Once inside the body of a code block (@if {}, @{}, etc.) you do not need to use &quot;@{&quot; to switch to code..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_CS">
            <summary>
              Looks up a localized string similar to A space or line break was encountered after the &quot;@&quot; character.  Only valid identifiers, keywords, comments, &quot;(&quot; and &quot;{&quot; are valid at the start of a code block and they must occur immediately following &quot;@&quot; with no space in between..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_VB">
            <summary>
              Looks up a localized string similar to A space or line break was encountered after the &quot;@&quot; character.  Only valid identifiers, keywords, comments, and &quot;(&quot; are valid at the start of a code block and they must occur immediately following &quot;@&quot; with no space in between..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_UnexpectedEndTag">
            <summary>
              Looks up a localized string similar to Encountered end tag &quot;{0}&quot; with no matching start tag.  Are your start/end tags properly balanced?.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_UnfinishedTag">
            <summary>
              Looks up a localized string similar to End of file or an unexpected character was reached before the &quot;{0}&quot; tag could be parsed.  Elements inside markup blocks must be complete. They must either be self-closing (&quot;&lt;br /&gt;&quot;) or have matching end tags (&quot;&lt;p&gt;Hello&lt;/p&gt;&quot;).  If you intended to display a &quot;&lt;&quot; character, use the &quot;&amp;lt;&quot; HTML entity..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_UnknownOption">
            <summary>
              Looks up a localized string similar to Unknown option: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_Unterminated_String_Literal">
            <summary>
              Looks up a localized string similar to Unterminated string literal.  Strings that start with a quotation mark (&quot;) must be terminated before the end of the line.  However, strings that start with @ and a quotation mark (@&quot;) can span multiple lines..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParseError_UnterminatedHelperParameterList">
            <summary>
              Looks up a localized string similar to Helper parameter list is missing a closing &quot;)&quot;..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Parser_Context_Not_Set">
            <summary>
              Looks up a localized string similar to Parser was started with a null Context property.  The Context property must be set BEFORE calling any methods on the parser..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserContext_CannotCompleteTree_NoRootBlock">
            <summary>
              Looks up a localized string similar to Cannot complete the tree, StartBlock must be called at least once..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserContext_CannotCompleteTree_OutstandingBlocks">
            <summary>
              Looks up a localized string similar to Cannot complete the tree, there are still open blocks..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserContext_NoCurrentBlock">
            <summary>
              Looks up a localized string similar to Cannot finish span, there is no current block. Call StartBlock at least once before finishing a span.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserContext_ParseComplete">
            <summary>
              Looks up a localized string similar to Cannot complete action, the parser has finished. Only CompleteParse can be called to extract the final parser results after the parser has finished.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserEror_SessionDirectiveMissingValue">
            <summary>
              Looks up a localized string similar to Missing value for session state directive..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.ParserIsNotAMarkupParser">
            <summary>
              Looks up a localized string similar to The parser provided to the ParserContext was not a Markup Parser..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.SectionExample_CS">
            <summary>
              Looks up a localized string similar to @section Header { ... }.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.SectionExample_VB">
            <summary>
              Looks up a localized string similar to @Section Header ... End Section.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Structure_Member_CannotBeNull">
            <summary>
              Looks up a localized string similar to The {0} property of the {1} structure cannot be null..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Symbol_Unknown">
            <summary>
              Looks up a localized string similar to &lt;&lt;unknown&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.Tokenizer_CannotResumeSymbolUnlessIsPrevious">
            <summary>
              Looks up a localized string similar to Cannot resume this symbol. Only the symbol immediately preceding the current one can be resumed..
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.TokenizerView_CannotPutBack">
            <summary>
              Looks up a localized string similar to In order to put a symbol back, it must have been the symbol which ended at the current position. The specified symbol ends at {0}, but the current position is {1}.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_CharacterLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;character literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_Comment">
            <summary>
              Looks up a localized string similar to &lt;&lt;comment&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_DateLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;date literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_FloatingPointLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;floating point literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_Identifier">
            <summary>
              Looks up a localized string similar to &lt;&lt;identifier&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_IntegerLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;integer literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_Keyword">
            <summary>
              Looks up a localized string similar to &lt;&lt;keyword&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_NewLine">
            <summary>
              Looks up a localized string similar to &lt;&lt;newline sequence&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_RazorComment">
            <summary>
              Looks up a localized string similar to &lt;&lt;razor comment&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_StringLiteral">
            <summary>
              Looks up a localized string similar to &lt;&lt;string literal&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Resources.RazorResources.VBSymbol_WhiteSpace">
            <summary>
              Looks up a localized string similar to &lt;&lt;white space&gt;&gt;.
            </summary>
        </member>
        <member name="P:System.Web.Razor.Text.SourceLocation.LineIndex">
            <summary>
            Gets the 1-based index of the line referred to by this Source Location.
            </summary>
            <remarks>
            THIS IS 1-based!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            </remarks>
        </member>
        <member name="M:System.Web.Razor.Text.TextChange.#ctor(System.Int32,System.Int32,System.Web.Razor.Text.ITextBuffer,System.Int32,System.Web.Razor.Text.ITextBuffer)">
            <summary>
            Constructor for changes where the position hasn't moved (primarily for tests)
            </summary>
        </member>
        <member name="M:System.Web.Razor.Text.TextChange.ApplyChange(System.Web.Razor.Parser.SyntaxTree.Span)">
            <summary>
            Applies the text change to the content of the span and returns the new content.
            This method doesn't update the span content.
            </summary>
        </member>
        <member name="M:System.Web.Razor.Text.TextChange.Normalize">
            <summary>
            Removes a common prefix from the edit to turn IntelliSense replacements into insertions where possible
            </summary>
            <returns>A normalized text change</returns>
        </member>
        <member name="M:System.Web.Razor.Parser.SyntaxTree.Span.Accept(System.Web.Razor.Parser.ParserVisitor)">
            <summary>
            Accepts the specified visitor
            </summary>
            <remarks>
            Calls the VisitSpan method on the specified visitor, passing in this
            </remarks>
        </member>
        <member name="M:System.Web.Razor.Parser.SyntaxTree.Span.EquivalentTo(System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode)">
            <summary>
            Checks that the specified span is equivalent to the other in that it has the same start point and content.
            </summary>
        </member>
    </members>
</doc>
